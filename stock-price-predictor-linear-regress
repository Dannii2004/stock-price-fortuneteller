import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

def stock_price_prediction(stock_symbol_input, prediction_period_input):






    df_stock = pd.read_csv('historical_stock_data.csv')


   
    X_features = df_stock[['Close']].values
    y_target = df_stock['Close'].shift(-1).fillna(method='ffill').values



   
    X_train, X_test, y_train, y_test = train_test_split(X_features, y_target, test_size=0.2, random_state=42)


    stock_model = LinearRegression()
    stock_model.fit(X_train, y_train)


    prediction_values = df_stock[['Close']].tail(1).values.flatten()
    for _ in range(prediction_period_input):
        next_day_prediction = stock_model.predict(prediction_values.reshape(-1, 1))
        prediction_values = np.append(prediction_values, next_day_prediction)





    plt.figure(figsize=(10, 6))
    plt.plot(df_stock.index, df_stock['Close'], label='Historical Prices')
    plt.plot(range(len(df_stock), len(df_stock) + prediction_period_input), prediction_values[1:], label='Predicted Prices')
    plt.xlabel('Days')
    plt.ylabel('Stock Price')
    plt.title(f'Stock Price Prediction for {stock_symbol_input}')
    plt.legend()
    plt.grid(True)
    plt.savefig('stock_price_prediction_plot.png')
    plt.show()

   
    return prediction_values[1:]

if __name__ == "__main__":
    stock_symbol_input = input("Enter the stock symbol (e.g., AAPL): ")
    prediction_period_input = int(input("Enter the prediction period (in days): "))

    predictions_result = stock_price_prediction(stock_symbol_input, prediction_period_input)
    print("Predictions:")
    print(predictions_result)
